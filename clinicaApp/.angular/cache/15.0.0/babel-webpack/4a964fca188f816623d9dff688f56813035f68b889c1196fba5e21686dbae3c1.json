{"ast":null,"code":"import { environment } from \"../../../environments/environment\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class RequirementsService {\n  constructor(http) {\n    this.http = http;\n    this.apiServerUrl = environment.apiBaseUrl;\n  }\n  getRequirements() {\n    return this.http.get(`${this.apiServerUrl}/requirement/all`);\n  }\n  getRequirementById(requirementId) {\n    return this.http.get(`${this.apiServerUrl}/requirement/find/${requirementId}`);\n  }\n  static #_ = this.ɵfac = function RequirementsService_Factory(t) {\n    return new (t || RequirementsService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: RequirementsService,\n    factory: RequirementsService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":"AACA,SAAQA,WAAW,QAAO,mCAAmC;;;AAO7D,OAAM,MAAOC,mBAAmB;EAG9BC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFhB,iBAAY,GAAGH,WAAW,CAACI,UAAU;EAEP;EAE/BC,eAAe;IACpB,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAiB,GAAG,IAAI,CAACC,YAAY,kBAAkB,CAAC;EAC9E;EACOC,kBAAkB,CAACC,aAAqB;IAC7C,OAAO,IAAI,CAACN,IAAI,CAACG,GAAG,CAAe,GAAG,IAAI,CAACC,YAAY,qBAAqBE,aAAa,EAAE,CAAC;EAC9F;EAAC;qBAVUR,mBAAmB;EAAA;EAAA;WAAnBA,mBAAmB;IAAAS,SAAnBT,mBAAmB;IAAAU,YADP;EAAM","names":["environment","RequirementsService","constructor","http","apiBaseUrl","getRequirements","get","apiServerUrl","getRequirementById","requirementId","factory","providedIn"],"sourceRoot":"","sources":["C:\\AN_3\\IS\\Clinica\\clinicaApp\\src\\app\\components\\services\\requirements.service.ts"],"sourcesContent":["import {Injectable} from \"@angular/core\";\r\nimport {environment} from \"../../../environments/environment\";\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {Observable} from \"rxjs\";\r\nimport {Profession} from \"./profession\";\r\nimport {Requirements} from \"./requirements\";\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class RequirementsService{\r\n  private apiServerUrl = environment.apiBaseUrl;\r\n\r\n  constructor(private http: HttpClient){}\r\n\r\n  public getRequirements():Observable<Requirements[]>{\r\n    return this.http.get<Requirements[]>(`${this.apiServerUrl}/requirement/all`);\r\n  }\r\n  public getRequirementById(requirementId: number): Observable<Requirements>{\r\n    return this.http.get<Requirements>(`${this.apiServerUrl}/requirement/find/${requirementId}`);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}