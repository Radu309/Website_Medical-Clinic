{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { toInteger } from \"lodash\";\nlet ScheduleComponent = class ScheduleComponent {\n  constructor(doctorService, professionService, appointService, requirementsService) {\n    this.doctorService = doctorService;\n    this.professionService = professionService;\n    this.appointService = appointService;\n    this.requirementsService = requirementsService;\n    this.isBusy = \"Free\";\n    this.doctorService = doctorService;\n    this.professionService = professionService;\n    this.appointService = appointService;\n    this.requirementsService = requirementsService;\n    this.arrayCalendar = [];\n    for (var i = 8; i < 16; i++) {\n      this.arrayCalendar[i - 8] = [];\n      for (var j = 0; j < 6; j++) this.arrayCalendar[i - 8][j] = \"Free\";\n    }\n  }\n  ngOnInit() {\n    this.getOneDoctor();\n    this.getOneProfession();\n    this.getSchedule();\n  }\n  getSchedule() {\n    this.arrayCalendar[0][1] = \"Busy\";\n  }\n  getOneProfession() {\n    this.professionService.getProfessionById(toInteger(localStorage.getItem(\"Profession\"))).subscribe(response => {\n      this.oneProfession = response;\n      console.log(this.oneProfession);\n    }, error => {\n      alert(error.message);\n    });\n  }\n  getOneDoctor() {\n    this.doctorService.getDoctorById(toInteger(localStorage.getItem(\"Doctor\"))).subscribe(response => {\n      this.oneDoctor = response;\n      console.log(this.oneDoctor);\n    }, error => {\n      alert(error.message);\n    });\n  }\n};\nScheduleComponent = __decorate([Component({\n  selector: 'app-schedule',\n  templateUrl: './schedule.component.html',\n  styleUrls: ['./schedule.component.css']\n})], ScheduleComponent);\nexport { ScheduleComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAKzC,SAAQC,SAAS,QAAO,QAAQ;AAYzB,IAAMC,iBAAiB,GAAvB,MAAMA,iBAAiB;EAO5BC,YAAoBC,aAA4B,EAC5BC,iBAAoC,EACpCC,cAAkC,EAClCC,mBAAwC;IAHxC,kBAAa,GAAbH,aAAa;IACb,sBAAiB,GAAjBC,iBAAiB;IACjB,mBAAc,GAAdC,cAAc;IACd,wBAAmB,GAAnBC,mBAAmB;IAThC,WAAM,GAAW,MAAM;IAU5B,IAAI,CAACH,aAAa,GAAGA,aAAa;IAClC,IAAI,CAACC,iBAAiB,GAAGA,iBAAiB;IAC1C,IAAI,CAACC,cAAc,GAAGA,cAAc;IACpC,IAAI,CAACC,mBAAmB,GAAGA,mBAAmB;IAC9C,IAAI,CAACC,aAAa,GAAG,EAAE;IACvB,KAAI,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;MAC1B,IAAI,CAACD,aAAa,CAACC,CAAC,GAAC,CAAC,CAAC,GAAG,EAAE;MAC5B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EACxB,IAAI,CAACF,aAAa,CAACC,CAAC,GAAG,CAAC,CAAC,CAACC,CAAC,CAAC,GAAG,MAAM;;EAE3C;EAEAC,QAAQ;IACN,IAAI,CAACC,YAAY,EAAE;IACnB,IAAI,CAACC,gBAAgB,EAAE;IACvB,IAAI,CAACC,WAAW,EAAE;EACpB;EAEOA,WAAW;IAChB,IAAI,CAACN,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,MAAM;EACnC;EAEOK,gBAAgB;IACrB,IAAI,CAACR,iBAAiB,CAACU,iBAAiB,CAACd,SAAS,CAACe,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC,CAACC,SAAS,CAC9FC,QAAoB,IAAI;MACvB,IAAI,CAACC,aAAa,GAAGD,QAAQ;MAC7BE,OAAO,CAACC,GAAG,CAAC,IAAI,CAACF,aAAa,CAAC;IACjC,CAAC,EACAG,KAAwB,IAAI;MAC3BC,KAAK,CAACD,KAAK,CAACE,OAAO,CAAC;IACtB,CAAC,CACF;EACH;EACOb,YAAY;IACjB,IAAI,CAACR,aAAa,CAACsB,aAAa,CAACzB,SAAS,CAACe,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAACC,SAAS,CAClFC,QAAgB,IAAI;MACnB,IAAI,CAACQ,SAAS,GAAGR,QAAQ;MACzBE,OAAO,CAACC,GAAG,CAAC,IAAI,CAACK,SAAS,CAAC;IAC7B,CAAC,EACAJ,KAAwB,IAAI;MAC3BC,KAAK,CAACD,KAAK,CAACE,OAAO,CAAC;IACtB,CAAC,CACF;EACH;CACD;AAvDYvB,iBAAiB,eAN7BF,SAAS,CAAC;EACT4B,QAAQ,EAAE,cAAc;EACxBC,WAAW,EAAE,2BAA2B;EACxCC,SAAS,EAAE,CAAC,0BAA0B;CACvC,CAAC,GAEW5B,iBAAiB,CAuD7B;SAvDYA,iBAAiB","names":["Component","toInteger","ScheduleComponent","constructor","doctorService","professionService","appointService","requirementsService","arrayCalendar","i","j","ngOnInit","getOneDoctor","getOneProfession","getSchedule","getProfessionById","localStorage","getItem","subscribe","response","oneProfession","console","log","error","alert","message","getDoctorById","oneDoctor","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\AN_3\\IS\\Clinica\\clinicaApp\\src\\app\\components\\schedule\\schedule.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport {Doctor} from \"../services/doctor\";\nimport {HttpErrorResponse} from \"@angular/common/http\";\nimport {DoctorService} from \"../services/doctor.service\";\nimport {ProfessionService} from \"../services/profession.service\";\nimport {toInteger} from \"lodash\";\nimport {Profession} from \"../services/profession\";\nimport {AppointmentService} from \"../services/appointment.service\";\nimport {RequirementsService} from \"../services/requirements.service\";\nimport {number} from \"zod\";\n\n@Component({\n  selector: 'app-schedule',\n  templateUrl: './schedule.component.html',\n  styleUrls: ['./schedule.component.css']\n})\n\nexport class ScheduleComponent {\n  public isBusy: string = \"Free\";\n  public oneDoctor: Doctor | undefined;\n  public oneProfession: Profession | undefined;\n\n  public arrayCalendar: string[][];\n\n  constructor(private doctorService: DoctorService,\n              private professionService: ProfessionService,\n              private appointService: AppointmentService,\n              private requirementsService: RequirementsService){\n    this.doctorService = doctorService;\n    this.professionService = professionService;\n    this.appointService = appointService;\n    this.requirementsService = requirementsService;\n    this.arrayCalendar = [];\n    for(var i = 8; i < 16; i++) {\n      this.arrayCalendar[i-8] = [];\n      for (var j = 0; j < 6; j++)\n        this.arrayCalendar[i - 8][j] = \"Free\";\n    }\n  }\n\n  ngOnInit(){\n    this.getOneDoctor();\n    this.getOneProfession();\n    this.getSchedule();\n  }\n\n  public getSchedule(): void {\n    this.arrayCalendar[0][1] = \"Busy\";\n  }\n\n  public getOneProfession(): void {\n    this.professionService.getProfessionById(toInteger(localStorage.getItem(\"Profession\"))).subscribe(\n      (response: Profession) => {\n        this.oneProfession = response;\n        console.log(this.oneProfession);\n      },\n      (error: HttpErrorResponse) => {\n        alert(error.message);\n      }\n    )\n  }\n  public getOneDoctor(): void {\n    this.doctorService.getDoctorById(toInteger(localStorage.getItem(\"Doctor\"))).subscribe(\n      (response: Doctor) => {\n        this.oneDoctor = response;\n        console.log(this.oneDoctor);\n      },\n      (error: HttpErrorResponse) => {\n        alert(error.message);\n      }\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}