{"ast":null,"code":"import { environment } from \"src/environments/environment\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ClientService {\n  constructor(http) {\n    this.http = http;\n    this.apiServerUrl = environment.apiBaseUrl;\n  }\n  getClients() {\n    return this.http.get(`${this.apiServerUrl}/client/all`);\n  }\n  authenticateClient(client) {\n    this.http.post(`${this.apiServerUrl}/client/authenticate`, client);\n    return this.http.post(`${this.apiServerUrl}/client/authenticate`, client);\n  }\n  getClientById(clientId) {\n    return this.http.get(`${this.apiServerUrl}/client/find/${clientId}`);\n  }\n  addClient(client) {\n    return this.http.post(`${this.apiServerUrl}/client/add`, client);\n  }\n  updateClient(client) {\n    return this.http.put(`${this.apiServerUrl}/client/update`, client);\n  }\n  deleteClient(clientId) {\n    return this.http.delete(`${this.apiServerUrl}/client/delete/${clientId}`);\n  }\n  static #_ = this.ɵfac = function ClientService_Factory(t) {\n    return new (t || ClientService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ClientService,\n    factory: ClientService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":"AAIA,SAAQA,WAAW,QAAO,8BAA8B;;;AAIxD,OAAM,MAAOC,aAAa;EAGxBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFhB,iBAAY,GAAGH,WAAW,CAACI,UAAU;EAEN;EAEhCC,UAAU;IACf,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAW,GAAG,IAAI,CAACC,YAAY,aAAa,CAAC;EACnE;EAEOC,kBAAkB,CAACC,MAAc;IACtC,IAAI,CAACN,IAAI,CAACO,IAAI,CAAU,GAAG,IAAI,CAACH,YAAY,sBAAsB,EAAEE,MAAM,CAAC;IAE3E,OAAO,IAAI,CAACN,IAAI,CAACO,IAAI,CAAU,GAAG,IAAI,CAACH,YAAY,sBAAsB,EAAEE,MAAM,CAAC;EAEpF;EAEOE,aAAa,CAACC,QAAgB;IACnC,OAAO,IAAI,CAACT,IAAI,CAACG,GAAG,CAAS,GAAG,IAAI,CAACC,YAAY,gBAAgBK,QAAQ,EAAE,CAAC;EAC9E;EAEOC,SAAS,CAACJ,MAAc;IAC7B,OAAO,IAAI,CAACN,IAAI,CAACO,IAAI,CAAS,GAAG,IAAI,CAACH,YAAY,aAAa,EAAEE,MAAM,CAAC;EAC1E;EAEOK,YAAY,CAACL,MAAc;IAChC,OAAO,IAAI,CAACN,IAAI,CAACY,GAAG,CAAS,GAAG,IAAI,CAACR,YAAY,gBAAgB,EAAEE,MAAM,CAAC;EAC5E;EACOO,YAAY,CAACJ,QAAgB;IAClC,OAAO,IAAI,CAACT,IAAI,CAACc,MAAM,CAAO,GAAG,IAAI,CAACV,YAAY,kBAAkBK,QAAQ,EAAE,CAAC;EACjF;EAAC;qBA7BUX,aAAa;EAAA;EAAA;WAAbA,aAAa;IAAAiB,SAAbjB,aAAa;IAAAkB,YADD;EAAM","names":["environment","ClientService","constructor","http","apiBaseUrl","getClients","get","apiServerUrl","authenticateClient","client","post","getClientById","clientId","addClient","updateClient","put","deleteClient","delete","factory","providedIn"],"sourceRoot":"","sources":["C:\\AN_3\\IS\\Clinica\\clinicaApp\\src\\app\\components\\services\\client.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport {Client} from './client';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport {environment} from \"src/environments/environment\";\r\nimport {Profession} from \"./profession\";\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class ClientService{\r\n  private apiServerUrl = environment.apiBaseUrl;\r\n\r\n  constructor(private http: HttpClient){ }\r\n\r\n  public getClients(): Observable<Client[]>{\r\n    return this.http.get<Client[]>(`${this.apiServerUrl}/client/all`);\r\n  }\r\n\r\n  public authenticateClient(client: Client): Observable<Boolean>{\r\n    this.http.post<Boolean>(`${this.apiServerUrl}/client/authenticate`, client);\r\n\r\n    return this.http.post<Boolean>(`${this.apiServerUrl}/client/authenticate`, client);\r\n\r\n  }\r\n\r\n  public getClientById(clientId: number): Observable<Client>{\r\n    return this.http.get<Client>(`${this.apiServerUrl}/client/find/${clientId}`);\r\n  }\r\n\r\n  public addClient(client: Client): Observable<Client>{\r\n    return this.http.post<Client>(`${this.apiServerUrl}/client/add`, client);\r\n  }\r\n\r\n  public updateClient(client: Client): Observable<Client>{\r\n    return this.http.put<Client>(`${this.apiServerUrl}/client/update`, client);\r\n  }\r\n  public deleteClient(clientId: number): Observable<void>{\r\n    return this.http.delete<void>(`${this.apiServerUrl}/client/delete/${clientId}`);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}